name: 代码质量检查

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置 Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 安装依赖
      run: |
        cd wlbj-refactored
        npm ci
        
    - name: 运行ESLint检查
      run: |
        cd wlbj-refactored
        npm run lint
        
    - name: 运行Prettier格式化检查
      run: |
        cd wlbj-refactored
        npm run format:check
        
    - name: 运行测试
      run: |
        cd wlbj-refactored
        npm test -- --coverage --watchAll=false
        
    - name: 上传测试覆盖率
      uses: codecov/codecov-action@v3
      with:
        file: ./wlbj-refactored/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: 运行安全检查
      run: |
        cd wlbj-refactored
        npm audit --audit-level moderate
        
    - name: 检查依赖
      run: |
        cd wlbj-refactored
        npm outdated || true
        
    - name: 运行综合质量检查
      run: |
        cd wlbj-refactored
        npm run quality:check
        
    - name: 生成质量报告
      if: always()
      run: |
        cd wlbj-refactored
        echo "## 质量检查报告" >> $GITHUB_STEP_SUMMARY
        echo "### ESLint检查" >> $GITHUB_STEP_SUMMARY
        npm run lint -- --format json > eslint-report.json || true
        echo "### Prettier检查" >> $GITHUB_STEP_SUMMARY
        npm run format:check >> $GITHUB_STEP_SUMMARY || true
        echo "### 测试覆盖率" >> $GITHUB_STEP_SUMMARY
        if [ -f coverage/coverage-summary.json ]; then
          cat coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
        fi

  frontend-quality-check:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'frontend/')
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 安装依赖
      run: |
        cd wlbj-refactored
        npm ci
        
    - name: 运行前端ESLint检查
      run: |
        cd wlbj-refactored
        npm run lint:frontend
        
    - name: 运行前端Prettier检查
      run: |
        cd wlbj-refactored
        npm run format:frontend:check
        
    - name: 运行前端类型检查
      run: |
        cd wlbj-refactored/frontend
        if [ -f tsconfig.json ]; then
          npx tsc --noEmit
        fi
        
    - name: 运行前端测试
      run: |
        cd wlbj-refactored/frontend
        if [ -f package.json ]; then
          npm test -- --watchAll=false --coverage
        fi

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 运行安全扫描
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'
        
    - name: 运行依赖安全检查
      run: |
        cd wlbj-refactored
        npm audit --audit-level high --json > audit-results.json || true
        
    - name: 上传安全扫描结果
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: security-scan-results.sarif
